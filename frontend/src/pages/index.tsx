import Head from "next/head";
import Image from "next/image";
import { Inter } from "@next/font/google";
import styles from "$styles/Home.module.scss";
import { MapBox } from "$components/Map";
import { Status, Wrapper } from "@googlemaps/react-wrapper";
import { ReactElement, useEffect, useRef, useState } from "react";
import { Marker } from "$components/Marker";
import { GeocodingInput } from "$components/GeocodeInput";
import { TextInput } from "$components/Input";

const inter = Inter({ subsets: ["latin"] });
const render = (status: Status): ReactElement => {
  if (status === Status.FAILURE) {
    console.log(status);
    return <div>error</div>;
  }
  return <div>{status}</div>;
};

export default function Home() {
  const [clicks, setClicks] = useState<google.maps.LatLng[]>([]);
  const [zoom, setZoom] = useState(3); // initial zoom
  const [center, setCenter] = useState<google.maps.LatLngLiteral>({
    lat: -17.167011,
    lng: -40.336223,
  });

  const newLocation = (LatLng: google.maps.LatLngLiteral) => {
    setCenter(LatLng);
  };

  const onClick = (e: google.maps.MapMouseEvent) => {
    // avoid directly mutating state
    console.log(e.latLng!.lat());
    setClicks([...clicks, e.latLng!]);
  };

  const onIdle = (m: google.maps.Map) => {
    console.log("onIdle");
    setZoom(m.getZoom()!);
    setCenter(m.getCenter()!.toJSON());
  };

  const handleSubmit = (event) => {
    event.preventDefault();
    const data = {
      name: event.target.name.value,
      weight: event.target.weight.value,
    };

    console.log(data);
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <section className={styles.sideBar}>
          <form onSubmit={handleSubmit}>
            <TextInput
              type="text"
              placeholder="Nome do Cliente"
              id="name"
              required
            />
            <TextInput
              type="number"
              placeholder="Peso da Entrega (KG)"
              id="weight"
              required
            />
            <GeocodingInput onNewLatLng={newLocation} />
            <button type="submit">Submit</button>
          </form>
        </section>
        <Wrapper
          apiKey={process.env.NEXT_PUBLIC_API_GOOGLE_KEY}
          render={render}
        >
          <MapBox center={center} zoom={16} onClick={onClick}>
            {clicks.map((latLng, i) => (
              <Marker
                key={i}
                position={latLng}
                animation={google.maps.Animation.DROP}
                clickable={true}
                title={"Marcador " + String(i + 1)}
                label={{ text: String(i + 1), color: "black" }}
              />
            ))}
          </MapBox>
        </Wrapper>
      </main>
    </>
  );
}
